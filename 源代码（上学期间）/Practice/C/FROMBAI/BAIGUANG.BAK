#include<dos.h>
#include<stdio.h>
#include<graphics.h>
#include<string.h>
#define NUM 5
#define LEN 15
struct student{
    long num;
    char name[20];
    int chinese,english,computer,math;
    struct student *next;
      };
#define NULL 0
#define LE sizeof(struct student)
#define STU struct student
/* These are window's option */
   int xo=20,yo=20,dy=50,dx=150,x1,y1,maxx,maxy;

/* Draw background*/
background()
    {
      setcolor(WHITE);
      rectangle(xo,yo,maxx-xo,maxy-yo);
      setfillstyle(6,BLUE);
      bar(xo+1,yo+1,maxx-xo-1,maxy-yo-1);



    }

/* Draw all buttons */
drawbutton(char ptr[][LEN])
    { int i;
      setfillstyle(1,GREEN);
      for (i=0;i<=NUM-1;i++)
	    {
		rectangle(x1,y1+i*dy,x1+dx,y1+i*dy+dy);
		floodfill(x1+1,y1+i*dy+1,WHITE);
	    }
      for (i=0;i<=NUM-1;i++)
	     {
	       outtextxy(x1+(dx-strlen(ptr[i])*7)/2,y1+dy/2+i*dy-3,ptr[i]);
	       outtextxy(x1+(dx-strlen(ptr[i])*7)/2,y1+dy/2+i*dy+6,"-");

	     }
     }

/* Draw one button */
activebutton(char ptr[][LEN],int n)
      {
	  bar(x1+1,y1+n*dy+1,x1+dx-1,y1+n*dy+dy-1);
	  outtextxy(x1+(dx-strlen(ptr[n])*7)/2,y1+dy/2+n*dy-3,ptr[n]);
	  outtextxy(x1+(dx-strlen(ptr[n])*7)/2,y1+dy/2+n*dy+2,"_");
      }

/* Input a key from keyboard */
get_key()
      {
	  union REGS r;
	  r.h.ah=0;
	  return (int86(0x16,&r,&r));
      }

show()
      { clrscr();
	gotoxy (5,5);printf("Number:");
	gotoxy (5,6);printf("Name:");
	gotoxy (5,7);printf("Chinese score:");
	gotoxy (5,8);printf("English score:");
	gotoxy (5,9);printf("Computer score:");
	gotoxy (5,10);printf("Math score:");
      }

input(STU *ptr)
      {
	gotoxy (5+7,5);scanf("%ld",&ptr->num);
	if (ptr->num==0) return;
	gotoxy (5+5,6);scanf("%s",ptr->name);
	printf("%s",ptr->name);
	gotoxy (5+14,7);scanf("%d",&ptr->chinese);
	gotoxy (5+14,8);scanf("%d",&ptr->english);
	gotoxy (5+15,9);scanf("%d",&ptr->computer);
	gotoxy (5+11,10);scanf("%d",&ptr->math);
      }



STU *creat()
   {  int n;
      STU *head;
      STU *p1,*p2;
      n=0;
      p1=p2=(STU *)malloc(LE);
      show();
      input(p1);
      head=NULL;
      while(p1->num!=0)
	    {    n=n+1;
		 if (n==1) head=p1;
		 else p2->next=p1;
		 p2=p1;
		 p1=(STU *)malloc(LE);
		 show();
		 input(p1);
		 p2->next=NULL;
	     }
		 free(p1);
		 return (head);


     }
save( STU * head)
	    {    char c;
		 char fname[15];
		 STU *info;
		 FILE *fp;

		 printf("\nPlease input filename:");
		 scanf("%s",fname);
		 if ((fp=fopen(fname,"wb"))==NULL)
		      {  printf("can not open file \n");
			 return;
		      }
		 printf("\n saving file.");
		 info=head;
		 while (info)
		      {
		      fwrite(info,LE,1,fp);
		      printf("%ld",info->num);getch();
		      info=info->next; }
		 printf("%ld",info->num);getch();
		 fclose(fp);
	   }
clear(STU *head)
	 {   STU *info;
	     info=head;
	     while (info)
		{  free(info);
		   info=info->next;
		}
	 }

STU *load ( char *fname)
  {  STU *info,*head=NULL;
     FILE *fp;
     if ((fp=fopen(fname,"rb"))==NULL)
	     {  printf ("\n cannot open file!\n");return;}
     printf("\nloading file \n");
     head=(STU *)malloc(LEN);
     if (!head) {
	      printf ("out of memory\n");return;}
     info=head;
     while(!feof(fp)){
	      fread(info,LE,1,fp);
	      if(feof(fp)){info->next=NULL;break;}
	      printf("%ld,%s,%d,%d,%d,%d\n",info->num,info->name,info->chinese,info->english,info->computer,info->math);
	      getch();

	      info->next=(STU *)malloc(LE);
	      if (!head){printf("out of memory\n");return;}

	      info=info->next;
	      }


	      return (head);
	 }
print(STU *head)
	{   STU *ptr;
	    cleardevice();
	    printf("Number\tName\tChinese\tEnglish\tComputer\tMath\n");
	    ptr=head;
	    if(head!=NULL)
	       do
	       { printf("%ld\t%s\t%d\t%d\t%d\t%d\n",ptr->num,ptr->name,ptr->chinese,ptr->english,ptr->computer,ptr->math);
		 getch();
		  ptr=ptr->next;
	       } while(ptr!=NULL);
	}





/* Function of first button */
fuc0()
      { STU *head;
	restorecrtmode();
	head=creat();
	save(head);
	clear(head);
	setgraphmode(2);
	cleardevice();
       }

/* Function of second button */
fuc1(){ char fname[20];
	STU *head;
	cleardevice();
	printf("input file name:>");
	scanf("%s",fname);
	head=load(fname);
	cleardevice();
	print(head);
	getch();
       }

/* Function of third button */
fuc2(){background();

       getch();
       }

/* Function of forth button */
fuc3(){background();



       }

/* Exit the system */
fuc4(){
       cleardevice();
       closegraph();
       exit(0);

      }


main()
      {
	int i,n=0;
	char button[NUM][LEN]={"Creat","Inquire","Statistics","Modify","Exit"};
	union scan
	      {
		int c;
		char ch[2];
	      } sc;

     /* Set the graphic mode */
	int driver,mode;

	driver=VGA;
	mode=2;
	initgraph(&driver,&mode,"c:\\tc\\");

	maxx=getmaxx();maxy=getmaxy();
	x1=(maxx-dx)/2;y1=(maxy-dy*NUM)/2;

      do{
	  background();                /* Draw background */

	  drawbutton(button);          /* Draw allthebuttons */



	   do{
		setfillstyle(9,GREEN);
		activebutton(button,n);

		sc.c=get_key();         /* Get a key from keyboard */

		switch(sc.ch[1])
		      {
			  case 72:  n--;
				    { setfillstyle(1,GREEN);
				      activebutton(button,n+1);
				      break;}

			  case 80:  n++;
				    {  setfillstyle(1,GREEN);
				       activebutton(button,n-1);
				       break;}

		      }
		switch(sc.ch[0])
		      {
			  case 'C':
			  case 'c':  sc.ch[0]=13;n=0;break;
			  case 'I':
			  case 'i':  sc.ch[0]=13;n=1;break;
			  case 'S':
			  case 's':  sc.ch[0]=13;n=2;break;
			  case 'M':
			  case 'm':  sc.ch[0]=13;n=3;break;
			  case 'E':
			  case 'e':  sc.ch[0]=13;n=4;break;
		       }
	    if(n>NUM-1) n=0;
	    if(n<0)   n=NUM-1;

       }while (sc.ch[0]!=13);           /* Exit the loop */

    switch(n){
	      case 0: fuc0();break;
	      case 1: fuc1();break;
	      case 2: fuc2();break;
	      case 3: fuc3();break;
	      case 4: fuc4();break;
	     }
  }while(1);





    }

