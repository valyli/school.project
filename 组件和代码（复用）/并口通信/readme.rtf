{\rtf1\mac
{\fonttbl
{\f528\fnil Times New Roman;}
}
{\colortbl ;
\red0\green0\blue0;
\red254\green254\blue254;
\red254\green0\blue0;
\red0\green254\blue0;
\red0\green0\blue254;
\red0\green254\blue254;
\red254\green0\blue254;
\red254\green254\blue0;
\red0\green0\blue127;
\red0\green127\blue127;
\red0\green127\blue0;
\red127\green0\blue127;
\red127\green0\blue0;
\red127\green127\blue0;
\red127\green127\blue127;
\red191\green191\blue191;
}
{\stylesheet
{\s1\f53\fs32\b\ulnone\cf1 \qj\sb219\sa60\keepn\sl-360 \sbasedon0\snext5 heading 1;}
{\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 \sbasedon0\snext5 heading 2;}
{\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 \sbasedon0\snext5 heading 3;}
{\s4\f528\fs24\ulnone\cf1 \sl-280 \sbasedon0\snext4 List;}
{\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \sbasedon0\snext5 Normal;}
{\s6\f528\fs24\ulnone\cf1 \qj\sl-280 \sbasedon0\snext6 RTF_Defaults;}
{\s9\f0\fs24\ulnone \qc\sl240 \sbasedon0\snext9 CellFooting;}
{\s10\f15\fs24\b\ulnone\cf1 \qc\sl240 \sbasedon0\snext10 TableTitle;}
{\s7\f0\fs24\ulnone\cf1 \qc\sl240 \sbasedon0\snext7 CellHeading;}
{\s8\f0\fs24\ulnone \sl240 \sbasedon0\snext8 CellBody;}
{\s13\f0\fs20\ulnone \qj\sl-240\tqc\tx4320\tqr\tx8640 \sbasedon0\snext13 Header;}
{\s12\f0\fs20\ulnone\cf1 \qj\sl-240\tqc\tx4320\tqr\tx8640 \sbasedon0\snext12 Footer;}
{\s11\f0\fs24\ulnone\cf1 \sl280 \sbasedon0\snext11 Body;}
}
{\info{\comment Version of miftortf translator 5.0.}}
\paperw12240\paperh15840
\margl1800\margr1800
\margt1440\margb1440
\widowctrl\ftnbj\pgnstart1\ftnstart1
\revbar1
\sectd\sbkpage{\header }
{\footer }
\cols1\colsx0
\pard\plain\s4\f528\fs24\ulnone\cf1 \f36\fs28\b\i \qc\sl-340 Parallel Port Complete
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 by Jan Axelson
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 published by
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 Lakeview Research
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 2209 Winnebago St.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 Madison, WI 53704
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 Phone: 608-241-5824
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 Fax: 608-241-5848
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 Email: jaxelson@lvr.com
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \qc\sl-280 WWW: http://www.lvr.com
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 This file describes the contents of the program disk that accompanies the book
\f528 \f0\i  Parallel 
Port Complete
\i0\f528 . There are two versions of this file: 
\f528 \f0\i readme.rtf
\i0\f528  is in Rich Text format, and 
\f528 \f0\i readme.txt
\i0\f528  is plain ASCII text. They contain identical information.
\par
\pard\plain\s1\f53\fs32\b\ulnone\cf1 \qj\sb219\sa60\keepn\sl-360 About the Disk
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The disk has four main directories:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\DLL
\b0\i0\f528  contains DLLs for adding add Inp and Out routines for direct port access in Visual 
Basic.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\VB3
\b0\i0\f528  contains Visual Basic 3 (VB3) versions of the projects described in the book.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\VB4
\b0\i0\f528  contains Visual Basic 4 (VB4) versions of the projects described in the book. These 
projects will load and run under 16-bit and 32-bit Visual Basic 4.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\Basic52
\b0\i0\f528  contains program code for the peripheral circuits in Chapters 13 through 15.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The sections that follow describe the contents of each directory and how to use them.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Rules for Use
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 All of the files on this disk are provided for your use. You may use any or all portions of 
the files in your programs and distribute such programs without payment of royalties, if you 
agree to the following disclaimer:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The information, computer programs, documentation, and other material on this disk are 
provided \'d2as is,\'d3 without warranty of any kind, expressed or implied, including without 
limitation any warranty concerning the accuracy, adequacy, or completeness of the material 
or the results obtained from using the material.
\f528  Neither the publisher nor the author shall 
be responsible for any claims attributable to errors, omissions, or other inaccuracies in the 
material on this disk. In no event shall the publisher or author be liable for direct, indirect, 
special, incidental, or consequential damages in connection with, or arising out of, the con
struction, performance, or other use of the materials contained herein.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Questions Problems, or Suggestions
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 If you have any questions, problems, or suggestions relating to the files on this disk or the 
material in the book, the best way to reach me is by email at 
\f528 \f0\i jaxelson@lvr.com.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Copying the Files
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 For faster and more convenient access, you may copy the files on the floppy to a hard disk. 
The simplest way to do this is to copy the entire disk, including the subdirectories, to any 
subdirectory (folder) on your hard disk.
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 Windows 3.1 example
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 To copy the contents of the disk from drive A to directory 
\f528 \f0\i \\ppc
\i0\f528  on drive C:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 1. In the File Manager, double click to open both 
\f528 \f0\i Hard Drive C
\i0\f528  and 
\f528 \f0\i Floppy Drive A
\i0\f528 .
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 2. To create the directory 
\f528 \f0\i \\ppc
\i0\f528  on Drive C, select the 
\f528 \f0\i c:\\ 
\i0\f528 window, then in the 
\f528 \f0\i File
\i0\f528  menu se
lect 
\f528 \f0\i Create Directory
\i0\f528 , and type 
\f528 \f0\i ppc
\i0\f528 .
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 3. In the Drive A window, select 
\f528 \f0\i a:\\
\i0\f528  and use the mouse to drag the contents of Drive A to 
the 
\f528 \f0\i \\ppc
\i0\f528  directory on Drive C.
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 Windows 95 example
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 To copy the contents of the disk from drive A to directory 
\f528 \f0\i \\ppc
\i0\f528  on drive C:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 1. Click on 
\f528 \f0\i My Computer
\i0\f528  and click to open 
\f528 \f0\i Hard Drive C
\i0\f528  and 
\f528 \f0\i Floppy Drive A
\i0\f528 .
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 2. To create the directory 
\f528 \f0\i \\ppc
\i0\f528  on Drive C, click on 
\f528 \f0\i File, New, Folder
\i0\f528  and type 
\f528 \f0\i ppc
\i0\f528 .
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 3. On Drive A, click on
\f528 \f0\i  Edit, Select All,
\i0\f528  and use the mouse to drag the contents of Drive A 
to the 
\f528 \f0\i \\ppc
\i0\f528  folder on Drive C.
\par
\pard\plain\s1\f53\fs32\b\ulnone\cf1 \qj\sb219\sa60\keepn\sl-360 About the DLLs
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The
\f528 \f0\i  \\DLL
\i0\f528  directory has three subdirectories. Each contains a DLL that adds the ability to 
do port I/O in Visual Basic programs. Which to use depends on your program\'d5s abilities 
and requirements.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 For VB3 and 16-bit VB4 programs:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\inpout16
\b0\i0\f528  contains files related to 
\f528 \f0\i inpout16.dll
\i0\f528 , which contains Inp and Out for port access 
in VB3 programs and 16-bit VB4 programs.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout16.dll
\b0\i0\f528  is the DLL.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpoutv3.bas
\b0\i0\f528  has declarations for Inp and Out.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout16.txt
\b0\i0\f528  explains how to use the DLL.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout16.bas
\b0\i0\f528  is the source code for the DLL, which was created with PowerBasic\'d5s DLL 
compiler.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 For 32-bit VB4 programs:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\inpout32
\b0\i0\f528  contains files related to 
\f528 \f0\i inpout32.dll
\i0\f528 , which contains Inp and Out for port access 
in 32-bit VB4 programs.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout32.dll
\b0\i0\f528  is the DLL.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout32.bas
\b0\i0\f528  has declarations for Inp and Out.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpoutv4.bas
\b0\i0\f528  has declarations for Inp and Out in both
\f528 \f0\i  inpout16
\i0\f528  and 
\f528 \f0\i inpout32
\i0\f528 . Use this when 
you want to use one file for 32-bit and 16-bit VB4 programs.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout32.txt
\b0\i0\f528  explains how to use the DLL.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i inpout32.bas
\b0\i0\f528  is the source code for the DLL, which was created with Borland\'d5s Delphi 2.0 
object Pascal compiler.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Another option for VB3 and 16-bit VB4 programs:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i \\vbasm
\b0\i0\f528  contains files related to 
\f528 \f0\i vbasm.dll,
\i0\f528  which includes routines for port I/O (VbInp, 
VbOut) as well as software interrupts (Call VbInterrupt), and direct memory access (Vb
Poke, VbPeek). Vbasm is for use only with 16-bit programs. Because of the differences be
tween Windows 3.1 and Win 32, there is no equivalent for 32-bit programs.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i vbasm.dll
\b0\i0\f528  is the DLL.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i vbasm.txt
\b0\i0\f528  is declarations for the routines in 
\f528 \f0\i vbasm.dll
\i0\f528 .
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \f528 \f0\b\i vbasm.wri
\b0\i0\f528  explains how to use the DLL.
\f528 \f0\i \par
\pard\plain\s1\f53\fs32\b\ulnone\cf1 \qj\sb219\sa60\keepn\sl-360 About the Projects
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Each subdirectory in 
\f528 \f0\i \\VB3
\i0\f528  and 
\f528 \f0\i \\VB4
\i0\f528  contains a project that you may load into Visual Ba
sic\'d5s programming environment. From there, you may run the programs, modify them, cre
ate 
\f528 \f0\i .exe 
\i0\f528 files, or use the code in any way you wish.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Each project was originally created in VB3. The VB4 projects are identical, except for these 
differences:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 They use
\f528 \f0\i  inpoutv4.bas
\i0\f528  in place of 
\f528 \f0\i inpoutv3.bas.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The API declarations in 
\f528 \f0\i lpttempl.bas
\i0\f528  use conditional compiling to allow 16-bit or 32-bit 
API calls.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The project files are 
\f528 \f0\i .vbp
\i0\f528  format rather than 
\f528 \f0\i .mak
\i0\f528  format.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Other file changes are made automatically when a VB3 project is saved in VB4.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 The Project Files
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Each project\'d5s
\f528 \f0\i  .mak
\i0\f528  (VB3) or 
\f528 \f0\i .vbp
\i0\f528  (VB4) file lists the files used by the project. The 
project\'d5s subdirectory contains the project\'d5s startup form and any other files unique to that 
project. Each project also uses five files in the 
\f528 \f0\i \\lpttempl 
\i0\f528 subdirectory.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 For example, these are the files listed in the 
\f528 \f0\i outexpnd 
\i0\f528 project\'d5s
\f528 \f0\i  .mak
\i0\f528  file:
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 OUTEXPND.FRM
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 ..\\LPTTEMPL\\LPTUTIL.BAS
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 ..\\LPTTEMPL\\INPOUTV3.BAS
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 ..\\LPTTEMPL\\LPTTEMPL.BAS
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 ..\\LPTTEMPL\\NEWPORT.FRM
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 ..\\LPTTEMPL\\PORTSEL.FRM
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 This file specification:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 ..\\LPTTEMPL\\LPTUTIL.BAS
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 means that the 
\f528 \f0\i .mak
\i0\f528  or 
\f528 \f0\i .vbp
\i0\f528  file expects to find the 
\f528 \f0\i \\lpttempl
\i0\f528  subdirectory at the same level 
in the directory tree as the project\'d5s subdirectory.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 If you load the projects from the floppy, or if you copy the floppy to hard disk as described 
above, all project files will be in the expected locations. If a file is in a different location 
from that specified in the
\f528 \f0\i  .mak 
\i0\f528 or 
\f528 \f0\i .vbp
\i0\f528  file, you may use 
\f528 \f0\i Add File
\i0\f528  to load the file. Use 
\f528 \f0\i Save 
Project 
\i0\f528 to save any new file locations in the
\f528 \f0\i  .mak
\i0\f528  or 
\f528 \f0\i .vbp
\i0\f528  file. Another option is to use a text 
editor to change the file locations in the
\f528 \f0\i  .mak 
\i0\f528 or 
\f528 \f0\i .vbp
\i0\f528  file.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Using the 
\f53\b \b0\f0\i inpout 
\i0\f53\b \b0 DLLs
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 In each project, 
\f528 \f0\i Declare
\i0\f528  statements in 
\f528 \f0\i inpoutv3.bas
\i0\f528  or 
\f528 \f0\i inpoutv4.bas
\i0\f528  name one or more 
DLLs that contain routines called by the program.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The VB3 projects use 
\f528 \f0\i inpoutv3.bas
\i0\f528 , which declares Inp and Out in 
\f528 \f0\i inpout16.dll
\i0\f528  (in the 
\f528 \f0\i \\DLL\\inpout16
\i0\f528  subdirectory). The VB4 projects use 
\f528 \f0\i inpoutv4.bas
\i0\f528 , which includes declara
tions for Inp and Out in both 
\f528 \f0\i inpout16.dll
\i0\f528  and 
\f528 \f0\i inpout32.dll
\i0\f528  (in the 
\f528 \f0\i \\DLL\\inpout32
\i0\f528  subdirec
tory).
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 To use 
\f528 \f0\i inpout16.dll
\i0\f528  and 
\f528 \f0\i inpout32.dll
\i0\f528 , copy them to one of these locations:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The Windows directory (usually 
\f528 \f0\i \\Windows
\i0\f528 )
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The Windows system directory (usually 
\f528 \f0\i \\Windows\\system
\i0\f528 )
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The application\'d5s working directory. (In Visual Basic\'d5s programming environment, this is 
the Visual Basic directory.)
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Or, if you want to store the DLL in a different directory, add the path to the filename in each 
declaration.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Each DLL\'d5s
\f528 \f0\i  .txt
\i0\f528  file has further instructions for using the DLL.
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 The Project Directories
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 Each project corresponds to an application described in the book. Each project has its own 
subdirectory in \\VB3 and \\VB4.
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 VB3
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 All VB3 projects also use the following files in 
\f528 \f0\i \\VB3\\lpttempl\\:
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i inpoutv3.bas
\i0\f528 , declarations for Inp and Out.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i lpttempl.bas
\i0\f528 , general-purpose routines used by all startup forms.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i lptutil.bas,
\i0\f528  general-purpose parallel-port routines.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i newport.frm,
\i0\f528  add a new port.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i portsel.frm
\i0\f528 , select and test ports.
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 VB4
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 All VB4 projects also use the following files in 
\f528 \f0\i \\VB4\\lpttempl\\:
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i inpoutv4.bas
\i0\f528 , declarations for Inp and Out.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i lpttempl.bas
\i0\f528 , general-purpose routines used by all startup forms.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i lptutil.bas,
\i0\f528  general-purpose parallel-port routines.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i newport.frm,
\i0\f528  add a new port.
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i portsel.frm
\i0\f528 , select and test ports.
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 Project Directories Arranged Alphabetically
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\Adc0809
\i0\f528 , read an analog-to-digital converter, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\cnbnegot
\i0\f528 , compatibility, nibble, and byte-mode transfer, with negotiating, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\compbyte
\i0\f528 , compatibility and byte-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\compnibb
\i0\f528 , compatibility and nibble-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\Ds1620
\i0\f528 , link to a DS1620 temperature chip (synchronous serial interface), 
\f528 \f15\b Chapter 9
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\ecp
\i0\f528 , ECP-mode transfer, 
\f528 \f15\b Chapter 15
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\epp
\i0\f528 , EPP-mode transfer, 
\f528 \f15\b Chapter 14
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\inpexpnd
\i0\f528 , input expansion, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\latch8s
\i0\f528 , 8 latched inputs, using the Status bits, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\latch8sc
\i0\f528 , 8 latched inputs, using Status and Control bits, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\lpttempl
\i0\f528 , general-purpose template for parallel-port programs, 
\f528 \f15\b Chapter 4
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\lpttest
\i0\f528 , toggle and view parallel-port bits, 
\f528 \f15\b Chapter 5
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\outexpnd
\i0\f528 , output expansion, 
\f528 \f15\b Chapter 7
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\pcpcnibb
\i0\f528 , PC-to-PC nibble-mode transfer, 
\f528 \f15\b Chapter 16
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\polff
\i0\f528 , polled inputs, 
\f528 \f15\b Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\timeoday
\i0\f528 , trigger events on time of day, 
\f528 \f15\b Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\timrctrl
\i0\f528 , trigger periodic events, 
\f528 \f15\b Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\xpoint
\i0\f528 , control a crosspoint switch, 
\f528 \f15\b Chapter 7
\par
\pard\plain\s3\f36\fs24\b\i\ulnone\cf1 \qj\sb100\sa60\keepn\sl-280 Project Directories Arranged by Chapter Number
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\lpttempl
\i0\f528 , general-purpose template for parallel-port programs, 
\f528 \f15\b Chapter 4
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\lpttest
\i0\f528 , toggle and view parallel-port bits, 
\f528 \f15\b Chapter 5
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\outexpnd
\i0\f528 , output expansion, 
\f528 \f15\b Chapter 7
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\xpoint
\i0\f528 , control a crosspoint switch, 
\f528 \f15\b Chapter 7
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\Adc0809
\i0\f528 , read an analog-to-digital converter, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\inpexpnd
\i0\f528 , input expansion, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\latch8s
\i0\f528 , 8 latched inputs, using the Status bits, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\latch8sc
\i0\f528 , 8 latched inputs, using Status and Control bits, 
\f528 \f15\b Chapter 8
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\Ds1620
\i0\f528 , link to a DS1620 temperature chip (synchronous serial interface), 
\f528 \f15\b Chapter 9
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\polff
\i0\f528 , polled inputs,
\f528 \f15\b  Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\timeoday
\i0\f528 , trigger events on time of day, 
\f528 \f15\b Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\timrctrl
\i0\f528 , trigger periodic events, 
\f528 \f15\b Chapter 10
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\cnbnegot
\i0\f528 , compatibility, nibble, and byte-mode transfer, with negotiating, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\compbyte
\i0\f528 , compatibility and byte-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\compnibb
\i0\f528 , compatibility and nibble-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\epp
\i0\f528 , EPP-mode transfer, 
\f528 \f15\b Chapter 14
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\ecp
\i0\f528 , ECP-mode transfer,
\f528 \f15\b  Chapter 15
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i \\pcpcnibb
\i0\f528 , PC-to-PC nibble-mode transfer, 
\f528 \f15\b Chapter 16
\par
\pard\plain\s1\f53\fs32\b\ulnone\cf1 \qj\sb219\sa60\keepn\sl-360 About the Basic-52 programs
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The 
\f528 \f0\i \\Basic52
\i0\f528  directory contains program code for the peripheral circuits in the projects in 
Chapters 13 through 15. These programs are written for the 8052-Basic microcontroller\'d5s 
Basic-52 interpreter, using the circuit shown in Appendix B in the book.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The programs are intended as a very basic demonstration of PC-to-peripheral transfers us
ing the different modes. Peripheral devices are unique, and most will not use an 8052-Basic 
microcontroller. However, you may use the concepts in these programs as the basis for oth
er peripheral circuits.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 The syntax of the Basic-52 language is similar in many ways to other Basics. One nonstand
ard keyword used in the programs is XBY, used for reading and writing to external mem
ory.
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 This statement writes the byte AAh (&hAA in Visual Basic) to FC00h in external memory:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280   XBY(0FC00H)=0AAH
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 This statement stores the byte at FC02h in external memory in variable A:
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280   A=XBY(0FC02H)
\par
\pard\plain\s2\f53\fs24\b\ulnone\cf1 \qj\sb120\sa60\keepn\sl-280 Basic-52 Programs
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 These are the files in the 
\f528 \f0\i \\Basic52
\i0\f528  directory:
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i B52cbyt.bas
\i0\f528 , compatibility and byte-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i B52cnbn.bas
\i0\f528 , compatibility, nibble, and byte-mode transfer with negotiating, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i B52cnib.bas
\i0\f528 , compatibility and nibble-mode transfer, 
\f528 \f15\b Chapter 13
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i B52ecp.bas
\i0\f528 , ECP-mode transfer, 
\f528 \f15\b Chapter 15
\par
\pard\plain\s4\f528\fs24\ulnone\cf1 \sl-280 \f528 \f0\i B52epp.bas
\i0\f528 , EPP-mode transfer, 
\f528 \f15\b Chapter 14
\par
\pard\plain\s5\f528\fs24\ulnone\cf1 \qj\sb60\sa60\sl-280 \par
}
